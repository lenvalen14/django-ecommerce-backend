services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    env_file:
      - .env.dev
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django_app
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env.dev
    depends_on:
      - postgres
      - redis
      - kafka
  kafka-consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kafka_consumer
    command: python events/consumers/order_consumer.py
    env_file:
      - .env.dev
    environment:
      - PYTHONPATH=/app
    depends_on:
      - kafka
      - postgres

volumes:
  postgres_data:
